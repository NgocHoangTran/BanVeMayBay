
<script src="~/Areas/Admin/Assets/vendors/Chart.js/dist/Chart.min.js"></script>

@*<script src="~/Assets/Seller/js/Chart.js"></script>*@

<div class="x_content" id="reveneu">
    <div class="row" style="display: inline-block;">
        <div class="tile_count">
            <div class="col-lg-6 col-md-6 col-sm-12  tile_stats_count">
                <span class="count_top"><i class="fa fa-user"></i> Total Reveneu</span>
                <div class="count">@ViewBag.TotalRev</div>
                
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12  tile_stats_count">
                <span class="count_top"><i class="fa fa-clock-o"></i> @ViewBag.text</span>
                <div class="count">@ViewBag.TotalTicket</div>
                
            </div>

        </div>
    </div>
  
    <img src="~/Areas/Admin/Assets/img/Spinner-1s-200px.gif" id="loading" style="display:none;position: absolute;top: 40%;left: 45%;z-index: 100" />
    <canvas id="mylineChart"></canvas>

</div>

<link rel="stylesheet prefetch" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.js"></script>
<script>

    var a = '@ViewBag.ChuyenBay';
    var cb = a.split(',');

    var chuyenbay = [];


    for (let i = 0; i < cb.length; i++) {

        let CBay =cb[i];

        chuyenbay.push(CBay);
    }

    var ctx = document.getElementById("mylineChart");
    ctx.height = 400;
    var mylineChart = new Chart(ctx, {
        type: 'line',
        data: {
        labels: chuyenbay,
            datasets: [{
                label: '@ViewBag.label2',
                backgroundColor: "rgba(38, 185, 154, 0.31)",
                borderColor: "rgba(38, 185, 154, 0.7)",
                pointBorderColor: "rgba(38, 185, 154, 0.7)",
                pointBackgroundColor: "rgba(38, 185, 154, 0.7)",
                pointHoverBackgroundColor: "#fff",
                pointHoverBorderColor: "rgba(220,220,220,1)",
                pointBorderWidth: 1,
                data: [@ViewBag.Doanhthu],
                yAxisID: "left"

            },
            {
                label: '@ViewBag.label1',
                backgroundColor: "rgba(3, 88, 106, 0.3)",
                borderColor: "rgba(3, 88, 106, 0.70)",
                pointBorderColor: "rgba(3, 88, 106, 0.70)",
                pointBackgroundColor: "rgba(3, 88, 106, 0.70)",
                pointHoverBackgroundColor: "#fff",
                pointHoverBorderColor: "rgba(151,187,205,1)",
                pointBorderWidth: 1,
                data: [@ViewBag.SoVe],
                yAxisID: "right"

            }]
        },
        options : {
            scales: {
                xAxes: [{
                    //time: {
                    //    unit: 'time'
                    //},
                    gridLines: {
                        display: false,
                        drawBorder: false
                    },
                    ticks: {
                        maxRotation: 90,
                        minRotation: 90,
                        autoSkip: true,
                        maxTicksLimit: 12

                    }
                }],
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: "Reveneu (VND)"
                    },
                    id: "left",
                    stacked: false,
                    ticks: {
                        beginAtZero: true,

                        callback: function (value) {
                            if (value % 1 === 0) {
                                if (value > 1) { return value; }
                            }

                        }

                    }
                },
                {
                    scaleLabel: {
                        display: true,
                        labelString: '@ViewBag.label1'
                    },

                    id: "right",
                    position: "right",
                    stacked: false,
                    ticks: {
                        beginAtZero: true,

                        callback: function (value) {
                            if (value % 1 === 0) {
                                if (value > 1) { return value; }
                            }

                        }

                    }
                }]



            },
            legend: {
                onClick: function (e) {
                    e.stopPropagation();
                }
            },
            maintainAspectRatio: false,
        }
    });
</script>

